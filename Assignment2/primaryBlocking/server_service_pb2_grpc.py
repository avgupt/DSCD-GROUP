# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from primaryBlocking import server_service_pb2 as primaryBlocking_dot_server__service__pb2
from primaryBlocking import status_pb2 as primaryBlocking_dot_status__pb2


class ServerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.WriteFromClient = channel.unary_unary(
                '/ServerService/WriteFromClient',
                request_serializer=primaryBlocking_dot_server__service__pb2.WriteRequest.SerializeToString,
                response_deserializer=primaryBlocking_dot_server__service__pb2.WriteResponse.FromString,
                )
        self.WriteFromPrimary = channel.unary_unary(
                '/ServerService/WriteFromPrimary',
                request_serializer=primaryBlocking_dot_server__service__pb2.WriteRequest.SerializeToString,
                response_deserializer=primaryBlocking_dot_server__service__pb2.WriteResponse.FromString,
                )
        self.read = channel.unary_unary(
                '/ServerService/read',
                request_serializer=primaryBlocking_dot_server__service__pb2.FileRequest.SerializeToString,
                response_deserializer=primaryBlocking_dot_server__service__pb2.ReadResponse.FromString,
                )
        self.delete = channel.unary_unary(
                '/ServerService/delete',
                request_serializer=primaryBlocking_dot_server__service__pb2.FileRequest.SerializeToString,
                response_deserializer=primaryBlocking_dot_status__pb2.Status.FromString,
                )
        self.SendReplicaInfoToPrimary = channel.unary_unary(
                '/ServerService/SendReplicaInfoToPrimary',
                request_serializer=primaryBlocking_dot_server__service__pb2.SendReplicaInfoToPrimaryRequest.SerializeToString,
                response_deserializer=primaryBlocking_dot_server__service__pb2.SendReplicaInfoToPrimaryResponse.FromString,
                )


class ServerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def WriteFromClient(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteFromPrimary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def read(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendReplicaInfoToPrimary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'WriteFromClient': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteFromClient,
                    request_deserializer=primaryBlocking_dot_server__service__pb2.WriteRequest.FromString,
                    response_serializer=primaryBlocking_dot_server__service__pb2.WriteResponse.SerializeToString,
            ),
            'WriteFromPrimary': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteFromPrimary,
                    request_deserializer=primaryBlocking_dot_server__service__pb2.WriteRequest.FromString,
                    response_serializer=primaryBlocking_dot_server__service__pb2.WriteResponse.SerializeToString,
            ),
            'read': grpc.unary_unary_rpc_method_handler(
                    servicer.read,
                    request_deserializer=primaryBlocking_dot_server__service__pb2.FileRequest.FromString,
                    response_serializer=primaryBlocking_dot_server__service__pb2.ReadResponse.SerializeToString,
            ),
            'delete': grpc.unary_unary_rpc_method_handler(
                    servicer.delete,
                    request_deserializer=primaryBlocking_dot_server__service__pb2.FileRequest.FromString,
                    response_serializer=primaryBlocking_dot_status__pb2.Status.SerializeToString,
            ),
            'SendReplicaInfoToPrimary': grpc.unary_unary_rpc_method_handler(
                    servicer.SendReplicaInfoToPrimary,
                    request_deserializer=primaryBlocking_dot_server__service__pb2.SendReplicaInfoToPrimaryRequest.FromString,
                    response_serializer=primaryBlocking_dot_server__service__pb2.SendReplicaInfoToPrimaryResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ServerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ServerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def WriteFromClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ServerService/WriteFromClient',
            primaryBlocking_dot_server__service__pb2.WriteRequest.SerializeToString,
            primaryBlocking_dot_server__service__pb2.WriteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WriteFromPrimary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ServerService/WriteFromPrimary',
            primaryBlocking_dot_server__service__pb2.WriteRequest.SerializeToString,
            primaryBlocking_dot_server__service__pb2.WriteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def read(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ServerService/read',
            primaryBlocking_dot_server__service__pb2.FileRequest.SerializeToString,
            primaryBlocking_dot_server__service__pb2.ReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ServerService/delete',
            primaryBlocking_dot_server__service__pb2.FileRequest.SerializeToString,
            primaryBlocking_dot_status__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendReplicaInfoToPrimary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ServerService/SendReplicaInfoToPrimary',
            primaryBlocking_dot_server__service__pb2.SendReplicaInfoToPrimaryRequest.SerializeToString,
            primaryBlocking_dot_server__service__pb2.SendReplicaInfoToPrimaryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
